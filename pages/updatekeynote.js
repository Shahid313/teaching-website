import Head from 'next/head'
import Image from 'next/image'
import React,{useState, useEffect} from 'react'
import { withRouter } from 'next/router';
import axios from 'axios'
import Navbar from '../components/Navbar'
import styles from '../styles/Home.module.css'
import { useRouter } from 'next/router';

function UpdateKeynote(props) {
    const [title, setTitle] = useState('');
    const [content, setContent] = useState('');
    const [videoUrl, setVideoUrl] = useState('');
    const [subject, setSubject] = useState('');
    const [image, setImage] = useState('');
    const [allQuizzes, setQuizzes] = useState([]);
    const [quizzId, setQuizzId] = useState('');

    const router = useRouter();

    const formData = new FormData();
    formData.append('title', title);
    formData.append('content', content);
    formData.append('videoUrl', videoUrl);
    formData.append('key_image', image);
    formData.append('subject', subject);
    formData.append('quizzId', quizzId);

    const config = {
      headers: { 
        'content-type': 'multipart/form-data' }
     }
    

    useEffect(() => {
      getQuizzes();
      const keynoteId = props.router.query.keynoteId;
      if(keynoteId != null){
        localStorage.setItem('id', keynoteId);
      }
  
      let id = localStorage.getItem('id');
        axios.get(`http://localhost:5000/get_keynote_by_id?keynoteId=${id}`).then((response) => {
          setTitle(response.data.keynote.title);
          setContent(response.data.keynote.content);
          setVideoUrl(response.data.keynote.videoUrl);
          setSubject(response.data.keynote.subject);
        })
    }, []);

    const getQuizzes = () => {
      axios.get('http://localhost:5000/get_all_quizzes').then((response) => {
        setQuizzes(response.data.quizzes);
    });
    }

    const UpdateKey = (e) => {
    let id = localStorage.getItem('id');
    const formData = new FormData();
    formData.append('title', title);
    formData.append('content', content);
    formData.append('videoUrl', videoUrl);
    formData.append('key_image', image);
    formData.append('subject', subject);
    formData.append('quizzId', quizzId);
    formData.append('keynoteId', id);

    const config = {
      headers: { 
        'content-type': 'multipart/form-data' }
     }
    
    axios.post('http://localhost:5000/update_keynote', formData, config).then((res) => {
      if(res.data.msg == "Keynote updated succesfully"){
        alert("Keynote updated succesfully");
        router.push('/')
      }
    }).catch((err) => {
      console.log(err);
    })

    e.preventDefault();
    }

  return (
    <div>
      <Head>
        <title>Update Key</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar/>

      <h1 className={styles.h1}>Update Keynote</h1>
      <div className={styles.formcontainer}>
      <hr/>
      <div className={styles.container}>
        <label htmlFor="title"><strong>Title</strong></label>
        <input onChange={(e) => (setTitle(e.target.value))} value={title} className={styles.input} type="text" placeholder="Enter quiz title" name="title" required/>
        
        <label htmlFor="content"><strong>Content</strong></label>
        <textarea onChange={(e) => (setContent(e.target.value))} value={content} className={styles.input} rows="4" cols="50" placeholder="Enter content" name="content" required></textarea>

        <label htmlFor="subject"><strong>Subject</strong></label>
        <input onChange={(e) => (setSubject(e.target.value))} value={subject} className={styles.input} type="text" placeholder="Enter subject" name="subject" required/>

        <label htmlFor="videoUrl"><strong>Video Url</strong></label>
        <input onChange={(e) => (setVideoUrl(e.target.value))} value={videoUrl} className={styles.input} type="text" placeholder="Enter video url" name="videoUrl" required/>
        
        <label htmlFor="quiz"><strong>Select Quiz</strong></label>
        <select onChange={(e) => (setQuizzId(e.target.value))} className={styles.select_quiz_input}>
        {allQuizzes.map((quizz, index) => (
            <option value={quizz._id} key={index}>{quizz.title}</option>
        ))}
        </select>
        <br/>
        <br/>
        <label className={styles.uploadImageButton} htmlFor="image">Image</label>

        <input onChange={(e) => setImage(e.target.files[0])} className={styles.fileInput} type="file" id="image"/>

      </div>
      <button onClick={(e) => UpdateKey(e)} className={styles.button} type="submit">Update</button>
      
      
      </div>


    </div>
  )
}

export default withRouter(UpdateKeynote);