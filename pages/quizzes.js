import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'
import React,{useState, useEffect} from 'react'
import axios from 'axios'
import Navbar from '../components/Navbar'
import QuizzDetails from './quizzdetails'

export default function Quizz() {
    const [allQuizzes, setQuizzes] = useState([]);

    const router = useRouter();

    useEffect(() => {
        axios.get('http://localhost:5000/get_all_quizzes').then((response) => {
            setQuizzes(response.data.quizzes);
        });
      }, []);

      const handleDelete = (quizzId, index) => {
        axios.post(`http://localhost:5000/delete_quizz?quizzId=${quizzId}`).then((response) => {
            if(response.data.msg == "Quiz Deleted Successfully"){
                const values = [...allQuizzes];
                values.splice(index,1);
                setQuizzes(values);
            }
        })
      }

      const handleUpdate = (quizzId) => {
        
        router.push({
            pathname: '/updatequizz',
            query: { quizzId: quizzId }
        });
      }

      const quizzDetails = (quizzId) => {
        router.push({
            pathname: '/quizzdetails',
            query: { quizzId: quizzId }
        });
      }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar/>

      {/* table starts */}

      <h2>Quizzes</h2>
<div className="table-wrapper">
    <table className="fl-table">
        <thead>
        <tr>
            <th>Title</th>
            <th>Question</th>
            <th>Subject</th>
            <th>Difficulty</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        {allQuizzes.map((quizz, index) => {
        return(
        <tr key={index}>
            <td className='tableRow' onClick={() => quizzDetails(quizz._id)}>{quizz.title}</td>
            <td className='tableRow' onClick={() => quizzDetails(quizz._id)}>{quizz.question}</td>
            <td className='tableRow' onClick={() => quizzDetails(quizz._id)}>{quizz.subject}</td>
            <td>
            {quizz.difficulty.map((diff, index) => {
                return(
                    <svg key={index} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="difficultyIcon">
                    <path strokeLinecap="round" strokeLinejoin="round" d="M4.26 10.147a60.436 60.436 0 00-.491 6.347A48.627 48.627 0 0112 20.904a48.627 48.627 0 018.232-4.41 60.46 60.46 0 00-.491-6.347m-15.482 0a50.57 50.57 0 00-2.658-.813A59.905 59.905 0 0112 3.493a59.902 59.902 0 0110.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.697 50.697 0 0112 13.489a50.702 50.702 0 017.74-3.342M6.75 15a.75.75 0 100-1.5.75.75 0 000 1.5zm0 0v-3.675A55.378 55.378 0 0112 8.443m-7.007 11.55A5.981 5.981 0 006.75 15.75v-1.5" />
                    </svg>
                    )
                })}
            </td>
            <td>
            <svg onClick={() => handleDelete(quizz._id, index)} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="actionIcons">
            <path strokeLinecap="round" strokeLinejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
            </svg>

            <svg onClick={() => handleUpdate(quizz._id)} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="actionIcons">
            <path strokeLinecap="round" strokeLinejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" />
            </svg>


            </td>
        </tr>
            )
        })}
        
        
        </tbody>
    </table>
</div>
      {/* table ends */}

    </div>
  )
}

